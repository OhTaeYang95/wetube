'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var semver = require('semver');

var flags = require('./flags.json');

var getDescriptors = require('object.getownpropertydescriptors');

var replaceUnderscoresRegex = /_/g;
var leadingDashesRegex = /^--?/;
var trailingValuesRegex = /=.*$/;
var replace = Function.call.bind(String.prototype.replace);

var _has = Function.call.bind(Set.prototype.has);

var test = Function.call.bind(RegExp.prototype.test);

var _Object$keys$reduce = Object.keys(flags).reduce(function (acc, range) {
  return acc || (semver.satisfies(process.version, range) ? [flags[range], range] : acc);
}, null),
    _Object$keys$reduce2 = _slicedToArray(_Object$keys$reduce, 2),
    allowedNodeEnvironmentFlags = _Object$keys$reduce2[0],
    detectedSemverRange = _Object$keys$reduce2[1];

var trimLeadingDashes = function trimLeadingDashes(flag) {
  return replace(flag, leadingDashesRegex, '');
};

var NodeEnvironmentFlagsSet =
/*#__PURE__*/
function (_Set) {
  _inherits(NodeEnvironmentFlagsSet, _Set);

  function NodeEnvironmentFlagsSet() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, NodeEnvironmentFlagsSet);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NodeEnvironmentFlagsSet)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _this.add = function () {
      return _assertThisInitialized(_this);
    };

    return _this;
  }

  _createClass(NodeEnvironmentFlagsSet, [{
    key: "delete",
    value: function _delete() {
      return false;
    }
  }, {
    key: "clear",
    value: function clear() {}
  }, {
    key: "has",
    value: function has(key) {
      if (typeof key === 'string') {
        key = replace(key, replaceUnderscoresRegex, '-');

        if (test(leadingDashesRegex, key)) {
          key = replace(key, trailingValuesRegex, '');
          return _has(this, key);
        }

        return _has(nodeFlags, key);
      }

      return false;
    }
  }]);

  return NodeEnvironmentFlagsSet;
}(_wrapNativeSuper(Set));

var nodeFlags = Object.defineProperties(new Set(allowedNodeEnvironmentFlags.map(trimLeadingDashes)), getDescriptors(Set.prototype));
Object.freeze(NodeEnvironmentFlagsSet.prototype.constructor);
Object.freeze(NodeEnvironmentFlagsSet.prototype);
exports.allowedNodeEnvironmentFlags = Object.freeze(new NodeEnvironmentFlagsSet(allowedNodeEnvironmentFlags));
exports.detectedSemverRange = detectedSemverRange;