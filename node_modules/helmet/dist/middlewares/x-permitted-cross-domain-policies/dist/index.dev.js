"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var ALLOWED_PERMITTED_POLICIES = new Set(["none", "master-only", "by-content-type", "all"]);

function getHeaderValueFromOptions(_ref) {
  var _ref$permittedPolicie = _ref.permittedPolicies,
      permittedPolicies = _ref$permittedPolicie === void 0 ? "none" : _ref$permittedPolicie;

  if (ALLOWED_PERMITTED_POLICIES.has(permittedPolicies)) {
    return permittedPolicies;
  } else {
    throw new Error("X-Permitted-Cross-Domain-Policies does not support ".concat(JSON.stringify(permittedPolicies)));
  }
}

function xPermittedCrossDomainPolicies() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var headerValue = getHeaderValueFromOptions(options);
  return function xPermittedCrossDomainPoliciesMiddleware(_req, res, next) {
    res.setHeader("X-Permitted-Cross-Domain-Policies", headerValue);
    next();
  };
}

module.exports = xPermittedCrossDomainPolicies;
exports["default"] = xPermittedCrossDomainPolicies;