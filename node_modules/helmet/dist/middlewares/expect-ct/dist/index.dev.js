"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function parseMaxAge() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

  if (value >= 0 && Number.isFinite(value)) {
    return Math.floor(value);
  } else {
    throw new Error("Expect-CT: ".concat(JSON.stringify(value), " is not a valid value for maxAge. Please choose a positive integer."));
  }
}

function getHeaderValueFromOptions(options) {
  var directives = ["max-age=".concat(parseMaxAge(options.maxAge))];

  if (options.enforce) {
    directives.push("enforce");
  }

  if (options.reportUri) {
    directives.push("report-uri=\"".concat(options.reportUri, "\""));
  }

  return directives.join(", ");
}

function expectCt() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var headerValue = getHeaderValueFromOptions(options);
  return function expectCtMiddleware(_req, res, next) {
    res.setHeader("Expect-CT", headerValue);
    next();
  };
}

module.exports = expectCt;
exports["default"] = expectCt;